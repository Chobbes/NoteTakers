#+TITLE: Lued Notes
#+AUTHOR: Calvin Beck
#+OPTIONS: ^:{}

* Introduction
  This is a collection of Makefiles and scripts in order to aid in the
  creation and management of my LaTeX notes for courses.

  The main idea is to have a sub-directory for each day of classes -
  each one containing a LaTeX file for the day, and a Makefile which
  helps build a .pdf for that particular day. This helps if we need to
  include certain preambles, allows us to clean up some of the mess
  created by LaTeX more easily, and makes it easier to deal with when
  using editors such as Emacs which have commands to execute make -
  this is nice because it allows me to easily preview the final
  version of the notes.

  In the main parent directory we will also have a Makefile which
  allows us to build all of the .pdf files for the individual days, as
  well as mash all of the days up into one big .pdf containing all of
  the notes for all of the days. This Makefile will also allow us to
  create the daily sub-directories automatically from a template, and
  some additional functionality may also be added - perhaps searching
  for things within all of the notes.

  Note that this relies on some GNU make features currently, so you
  may have to install gmake.

* Usage
  First and foremost is the behavior of simply running:

  #+BEGIN_EXAMPLE
    $ make
  #+END_EXAMPLE

  Doing this will cause all of the individual .pdf files to be
  generated, as well as the large .pdf file, and nothing more.

  You may also produce only the individual .pdf files by running the
  command

  #+BEGIN_EXAMPLE
    $ make individuals
  #+END_EXAMPLE

** TODO Viewing
   Sometimes it is useful to be able to launch a .pdf reader with the
   main .pdf file easily. You can do this with

  #+BEGIN_EXAMPLE
    $ make view
  #+END_EXAMPLE

   One thing to note is that this may not be portable - it's hard to
   know what PDF viewer you use on everything! So you may want to
   provide the viewer that you use, for example

  #+BEGIN_EXAMPLE
    $ make view VIEWER=evince
  #+END_EXAMPLE

** TODO Building Sub-directories
   In order to start writing notes for the day we need to be able to
   create a sub-directory for the current day based off of the
   template. To do this we simply do the following:

  #+BEGIN_EXAMPLE
    $ make today
  #+END_EXAMPLE

   This will create a sub-directory with a name matching the current
   day in an easy to sort fashion. The format looks something like
   *classname-yyyy-mm-dd*. By default "classname" will be fetched from
   the name of the main directory, however this variable may also be
   modified in the Makefile.

** TODO Updating Sub-Makefiles
   Sometimes the Makefiles that we have for the sub-directories in the
   template needs to be updated, because we need to add some features,
   change some includes, or add some flags to commands. This will
   replace all of the Makefiles, but will not touch any of the LaTeX
   files.

   #+BEGIN_EXAMPLE
     $ make update
   #+END_EXAMPLE

** TODO Cloning
   This directory serves as a template for starting a new set of
   notes. You may create a new directory by issuing the following
   command in the main directory.

   #+BEGIN_EXAMPLE
     $ make clone CLONE_DIR=path/to/new/note/directory CLASSNAME=name
   #+END_EXAMPLE

   Obviously replacing the path to whatever you want it to be. If you
   do not provide the directory to clone into this should provide a
   helpful error message. The class name does not need to be provided,
   in which case the name of the directory will be used.

** TODO Distributions
   The main Makefile provides the ability to generate 'distributions'
   as well. These are just compressed archives of all of the
   individual .pdf files, as well as the main .pdf file. The main
   advantage of this being that it's easy to share with other people.

   #+BEGIN_EXAMPLE
     $ make distribution DIST_NAME=<name of archive file>
   #+END_EXAMPLE

   This will generate a file named 'distribution.tar.bz2' containing
   everything for just reading the notes by default, if no name was
   provided. None of the LaTeX is included.

   Some people are unable to deal with a '.tar.bz2' for whatever
   reason. Thus you may use the following target to generate a '.zip'
   archive instead.

   #+BEGIN_EXAMPLE
     $ make distribution-zip DIST_NAME=<name of archive file>
   #+END_EXAMPLE

** DONE Individual Makefiles
   The individual Makefile for each sub-directory of notes is used to
   create .pdf files for all of the .tex files within. In addition to
   that functionality

   #+BEGIN_EXAMPLE
     $ make view
   #+END_EXAMPLE

   may be used to open up the PDF in a PDF viewer (assuming the
   *VIEWER* variable is set to something that works). This is mostly
   useful when we want a preview while working on something in Emacs,
   or another editor which can call make commands easily.
